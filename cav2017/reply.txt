Related Work (R2)

The limitation of the approaches in the literature is that they do not address the combined model uncertainties, imprecisions, and restrictions (particularly, FWL representation) that our method tackles: they are not well suited to digital systems with limited resources. To quote a reference cited by the reviewer: "Given the fact that an abstraction may very well comprise millions of states and billions of transitions, an implementation of the refined controller is often too expensive to be practical." By comparison, our implementation operates on a limited number of bits and a few instruction cycles. This relates to our ability to deal with corner cases where our abstraction is more precise, whereas LTL approaches would be too costly implementation-wise to achieve similar precision. The mentioned literature does not explicitly address fixed-point arithmetic (no mention about number of bits in the implementation), which means that it lacks in description to attain our desired control objectives. 

We have cited related work in verification, synthesis, and optimisation of digital controllers that consider FWL effects 
(cf. references [2,5,9,12,17,19,24,25,26,27,33,34]). In particular, [18] is a key contribution by authors mentioned by the reviewer; [20, 25, 26, 33, 34] are from hybrid-system literature, [27, 28, 29] are from control literature; [24] is from literature on embedded systems.

Novelty (R1,R2,R3)

Our work synthesises digital stabilising controllers w.r.t. their implementation aspects (fixed-point arithmetic and FWL). In contrast to previous work, this submission exploits current advances in bit-accurate verification of programs to obtain a synthesiser for software-implemented digital control, which is correct by construction (cf. section 2). The presented approach can avoid fragility problems in robust controllers designed for state-space equations, which could be overlooked by other existing methods in view of their underestimation of FWL effects.  

CEGIS of Safe Controllers (R1)

There are three new aspects to our algorithm: safety specification, accounting for the error due to using a fixed-point controller, and accounting for the plant finite precision representation. The safety specification increases the verification problem size, hence a configuration with just a stability property is expected to perform faster. The quantisation error introduces much less complexity to the verification problem and thus affects runtime only marginally. Lastly, removing the precise fixed-point model from the analysis would be an impractical comparison since our whole choice of synthesis tools is based on fixed-point precision. It would completely eliminate the soundness guarantees that we establish over comparable work.

Scalability (R3)

CEGIS frameworks reason over an exponential space of solution programs which need to satisfy a property over an exponential input range. 
Inductive synthesis algorithms such as CEGIS are designed to heuristically find universally compliant programs with only a limited set of counterexamples. Whether this inductive generalisation is possible depends on the search domain, but CEGIS literature suggests this is generally the case in practise.  In our experiments, all successful benchmarks are synthesised using 5 counterexamples or less (cf. section 5); 52% of the time was spent in the synthesis and 48% in the verification phase.