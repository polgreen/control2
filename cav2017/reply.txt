[X.Y] -> means reviewer X comment Y

---
Reviewer 1
---
[1.1] It would be good to more clearly describe on those two points how your 
methods differ in the results that are produced, and in the cost of producing 
those results. E.g., if both additional factors are removed, does your method 
perform identical to earlier methods? As each factor is added, how much does 
it impact feasibility and cost of finding a solution?

[Elizabeth]

---
Reviewer 2
---

[2.1] Given these motivating points, there is actually a large body of 
work in the context of abstraction based controller synthesis for 
cyber-physical systems (CPS) which is not cited by the authors 
tackling these challenges. Furthermore, most of the work in this 
community can actually handle a lot more powerful specifications 
(beyond safety) and plant models (up to non-linear models without 
stability assumptions or stochastic models) by providing a fully 
automated design scheme as envisioned by the authors. Here is a short 
list of some related works that I have at the top of my head, but there are many more:

- textbook on the topic:
* Paulo Tabuada, Verification and Control of Hybrid Systems - A Symbolic Approach,  2009
(http://www.springer.com/de/book/9781441902238)

- work especially on safety specifications:
* Antoine Girard, Controller synthesis for safety and reachability 
via approximate bisimulation, 2012 
(http://www.sciencedirect.com/science/article/pii/S000510981200088X)

- work especially on LTI systems:
* Paulo Tabuada, Symbolic models for linear control systems 
with disturbances, 2007 (http://ieeexplore.ieee.org/abstract/document/4434957/)

- some recent works that talk explicitly about how errors 
form digital controller implementations are handled by the framework:
* Jun Liu and Necmiye Ozay, Abstraction, Discretization, and 
Robustness in Temporal Logic Control of Dynamical Systems, 
2014 (http://web.eecs.umich.edu/~necmiye/pubs/LiuO_hscc14.pdf)

* Gunther Reissig, Alexander Weber, and Matthias Rungger, 
Feedback Refinement Relations for the Synthesis of Symbolic 
Controllers 2016 (http://ieeexplore.ieee.org/abstract/document/7519063/)

* Mahmoud Khaled, Mtthias Rungger, and Majid Zamani, 
Symbolic Models of Networked Control Systems: 
A Feedback Refinement Relation Approach, 2016 
(https://www.researchgate.net/profile/Majid_Zamani/publication/306017464_Symbolic_Models_of_Networked_Control_Systems_A_Feedback_Refinement_Relation_Approach/links/5857b7db08ae544d8863bef1.pdf)

[Dario]


[2.2] Given the fact that the authors do not compare their work to the literature 
mentioned above, in which I think the proposed problem is already solved, 
I suggest to reject the paper.

[Dario]

[2.3] The authors should consider resubmitting the paper if they can show that 
they can generate solutions to problems which are not solvable by those 
abstraction based techniques mentioned above or if they can show that 
their method is solving the problem in a more efficient or less complex way.

[Dario]


---
Reviewer 3
---

[3.1] In addition, the experimental section misses some details 
which would be helpful to get a better insight into the algorithm behaviour.

[Pascal]

[3.2] I am not sure method (a) will scale due to exponential number of
checks in the verification phase. Generally, I am missing a break down
of the performance into phases (synthesis + verification). In
particular, I am wondering which phase dominates the whole run-time.

[Elizabeth]

[3.3] For the abstraction-based method, I am missing one of the main
indicators relevant for abstraction-based methods and namely number of
refinements for each experiment.

[Elizabeth]

[3.4] * On the naive algorithm: 

- I am confused about the completeness argument: The statement by the
  authors that a stable converges towards an origin seems to be
  correct, which is relevant for *stability*. Yet, I am not sure how
  the authors can derive their guarantees in case of *safety*. Could
  you please clarify?

[Elizabeth]

[3.5] * On the abstraction-based algorithm: 

- How do you use characteristic polynomial in the algorithm? In other
  words, I could not find any references to P_a(x) from step 1(a) in
  any further steps.

- It is not clear how you derive constraints on the eigen value
  structure based on a counter-example. Please clarify.

[Dario]
